import React, { useState } from 'react'
import { faAngleDown, faClose, faPlay, faShuffle } from '@fortawesome/free-solid-svg-icons'
import { NextPage } from 'next'
import Head from 'next/head'
import MenuButon, { BorderButon, MenuList } from '../src/components/Buton'
import DownButon from '../src/components/DownButon'
import Header from '../src/components/Header'
import styles from '../styles/Home.module.css'
import ArchiveMovieCover from '../src/components/ArchiveMovieCover'

import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import Line from '../src/components/Line'
import MenuContainer from '../src/components/MenuContainer'


const dumpData = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
const Archive: NextPage = () => {
  const [movieInfoShow, setMovieInfoShow] = useState(false);
  const [selectedData, setSelectedData] = useState<number>(0);
  const [selectedMenu, setSelectedMenu] = useState<MenuList>("Anime");
  return (
    <div className={styles.archiveBackground}>
      <Head>
        <title>Arşiv</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header
        search={'show'}
        notification={'hide'}
        style={{ backgroundColor: '#141414', marginTop: 0, padding: '5px' }} />
      <div className={styles.archiveContainer}>
        <div style={{ height: '100%' }}>
          <MenuContainer>
            <div className={styles.leftMenuContainer} >
              <MenuButon marginright='10px' onClick={() => setSelectedMenu('Anime')} isactive={selectedMenu == "Anime" ? "T" : "F"} name='Anime' />
              <MenuButon marginright='10px' onClick={() => setSelectedMenu('Manga')} isactive={selectedMenu == "Manga" ? "T" : "F"} name='Manga' />
              <MenuButon width='45px' icon={faShuffle} />
            </div>
            <div className={styles.rightMenuContainer}>
              <DownButon icon={faAngleDown} name='Puan' />
              <DownButon icon={faAngleDown} name='Popülerite' />
              <DownButon icon={faAngleDown} name='Tür' />
              <DownButon icon={faAngleDown} name='Kategori' />
              <DownButon icon={faAngleDown} name='A-Z' />
            </div>
          </MenuContainer>
          <div className={styles.contentContainer}>
            {
              dumpData.map((item) => {
                return <ArchiveMovieCover
                  blur={selectedData === 0 ? "1" : selectedData !== item ? "0" : "1"}
                  onClick={() => {
                    setMovieInfoShow(true)
                    setSelectedData(item)
                  }}
                  show={selectedData === item ? "1" : undefined} key={item} />
              })
            }
          </div>
        </div>

      </div>
      {movieInfoShow && <MovieDescriptionModal
        handleSelectedData={() => setSelectedData(0)}
        handleMovieInfoShow={() => setMovieInfoShow(false)}
      />}
    </div>
  )
}
export default Archive;

const MovieDescriptionModal = (props: { handleSelectedData: () => void, handleMovieInfoShow: () => void }) => {

  const ModalTitleContainer = () => {
    return (
      <div className={styles.titleContainer}>
        <h2>Tokyo Revengers</h2>
        <div style={{ marginBottom: '10px' }}></div>
        <Line />
      </div>
    )
  }
  const ModalBodyContainer = () => {
    return (
      <div className={styles.bodyContainer}>
        Takemichi Hanagaki, çaresizliğin dipsiz çukuruna düşmüş bir serbest çalışandır. Ortaokulda tanıştığı ve hayatı boyunca çıktığı tek kız olan Hinata Tachibana’nın acımasız Tokyo Manji Çetesi tarafından öldürüldüğünü öğrenir. Sonraki gün istasyon platformundaki kalabalık tarafından raylara itilir. Öleceğini düşünerek gözlerini kapatır fakat tekrar açtığında zamanda 12 yıl geriye gittiğini fark eder. Hayatının en iyi yıllarına dönen Takemichi, kız arkadaşını kurtarıp sürekli kaçtığı kendisini değiştirerek hayattan intikam almaya karar verir.
      </div>
    )
  }
  const ModalFooterContainer = () => {
    return (
      <div className={styles.footerContainer}>
        <div><FontAwesomeIcon color='#ffffff60' icon={faPlay} /></div>
        <div><FontAwesomeIcon color='#ffffff60' icon={faPlay} /></div>
      </div>
    )
  }
  return (
    <div className={styles.infoModalDescriptionModal}>
      <div className={styles.infoModalContent}>
        <div style={{ flex: 1, display: 'flex', justifyContent: 'flex-end' }}>
          <div className={styles.infoModalCloseContainer}
            onClick={() => {
              props.handleMovieInfoShow();
              props.handleSelectedData();
            }}>
            <FontAwesomeIcon icon={faClose} color={"#fff"} size={"2x"} />
          </div>
        </div>
        <ModalTitleContainer />
        <div className={styles.infoHeaderContainer}>
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
          <BorderButon name='Drama' />
        </div>
        <div className={styles.infoLineContainer}>
          <Line />
        </div>
        <ModalBodyContainer />
        <ModalFooterContainer />
      </div>
    </div>
  )
}